SQL queries for Case Study #3 - Foodie-Fi
https://8weeksqlchallenge.com/case-study-3/


Case Study Questions:

--------------------------- A. Customer Journey ---------------------------

SELECT *
FROM subscriptions s JOIN plans p
ON s.plan_id = p.plan_id
WHERE customer_id IN(1, 2, 11, 13, 15, 16, 18, 19)
ORDER BY customer_id, start_date

-- Out of the 8 sample customers, only one has cancelled his subscription right after the trial ended.
-- Among the other 7, three customers upgraded to basic monthly plan and another three upgraded to pro monthly plan.
-- 3 customers made another plan upgraded after a few months. One customer has cancelled his plan - a month after the upgrade.



--------------------------- B. Data Analysis Questions ---------------------------


--------------------------- Q1 ---------------------------

SELECT COUNT(DISTINCT customer_id) 'num_customers'
FROM subscriptions

--------------------------- Q2 ---------------------------

SELECT DATEADD(DAY, 1, EOMONTH(start_date, -1)) AS 'month', COUNT(*) AS 'started_trials'
FROM subscriptions
WHERE plan_id = 0
GROUP BY DATEADD(DAY, 1, EOMONTH(start_date, -1))
ORDER BY 1

--------------------------- Q3 ---------------------------

SELECT plan_name, COUNT(*) AS 'num'
FROM plans p JOIN subscriptions s
ON p.plan_id = s.plan_id
WHERE start_date >= '2021-01-01'
GROUP BY plan_name

--------------------------- Q4 ---------------------------

SELECT COUNT(DISTINCT customer_id) AS 'num_of_churn_cus',
	CAST(COUNT(customer_id) AS FLOAT)*100 / (SELECT COUNT(DISTINCT customer_id) FROM subscriptions) AS 'percentage'
FROM subscriptions
WHERE plan_id = 4

--------------------------- Q5 ---------------------------

SELECT COUNT(*) AS 'churned_customers',
	ROUND(CAST(COUNT(*) AS FLOAT)*100 / (SELECT COUNT(DISTINCT customer_id) FROM subscriptions),0) AS 'Percentage'
FROM subscriptions s1 JOIN subscriptions s2
ON s1.customer_id = s2.customer_id AND s1.plan_id < s2.plan_id
WHERE s1.plan_id = 0 AND s2.plan_id = 4
AND DATEDIFF(DAY, s1.start_date, s2.start_date) = 7

--------------------------- Q6 ---------------------------

SELECT plan_name, COUNT(*) AS 'num_of_customers',
	CAST(COUNT(*) AS FLOAT)*100 / (SELECT COUNT(DISTINCT customer_id) FROM subscriptions) AS 'Percentage'
FROM subscriptions s1 JOIN subscriptions s2
ON s1.customer_id = s2.customer_id AND s1.plan_id < s2.plan_id JOIN plans p ON s2.plan_id = p.plan_id
WHERE s1.plan_id = 0
AND DATEDIFF(DAY, s1.start_date, s2.start_date) <= 7
GROUP BY plan_name
ORDER BY 2 DESC

--------------------------- Q7 ---------------------------

SELECT plan_name, COUNT(*) AS 'num_of_customers',
	CAST(COUNT(*) AS FLOAT)*100 / (SELECT COUNT(DISTINCT customer_id) FROM subscriptions) AS 'Percentage'
FROM
	(SELECT customer_id, MAX(start_date) AS 'last_plan_date'
	FROM subscriptions
	WHERE start_date < '2021-01-01'
	GROUP BY customer_id) p
	JOIN subscriptions s ON p.customer_id = s.customer_id AND p.last_plan_date = s.start_date
	JOIN plans ON s.plan_id = plans.plan_id
GROUP BY plan_name
ORDER BY 2 DESC

--------------------------- Q8 ---------------------------

SELECT COUNT(DISTINCT customer_id) AS 'upgraded_to_annual'
FROM subscriptions
WHERE plan_id = 3 AND start_date BETWEEN '2020-01-01' AND '2020-12-31'

--------------------------- Q9 ---------------------------

SELECT AVG(days_to_upgrade) AS 'avg_days_to_annual' FROM
	(SELECT s1.customer_id, s1.start_date AS 'join_date', s2.start_date AS 'annual_plan_start_date',
		DATEDIFF(DAY, s1.start_date, s2.start_date) AS 'days_to_upgrade'
	FROM subscriptions s1 JOIN subscriptions s2
	ON s1.customer_id = s2.customer_id
	WHERE s1.plan_id = 0 AND s2.plan_id = 3) A

--------------------------- Q10 ---------------------------

SELECT days_group, AVG(days_to_upgrade) AS 'avg_days_to_annual' FROM
	(SELECT s1.customer_id, s1.start_date AS 'join_date', s2.start_date AS 'annual_plan_start_date',
		DATEDIFF(DAY, s1.start_date, s2.start_date) AS 'days_to_upgrade',
		CASE WHEN DATEDIFF(DAY, s1.start_date, s2.start_date) BETWEEN 0 AND 30 THEN '0-30'
			WHEN DATEDIFF(DAY, s1.start_date, s2.start_date) BETWEEN 31 AND 60 THEN '31-60'
			WHEN DATEDIFF(DAY, s1.start_date, s2.start_date) BETWEEN 61 AND 90 THEN '61-90'
			WHEN DATEDIFF(DAY, s1.start_date, s2.start_date) BETWEEN 91 AND 120 THEN '91-120'
			WHEN DATEDIFF(DAY, s1.start_date, s2.start_date) BETWEEN 121 AND 150 THEN '121-150'
			WHEN DATEDIFF(DAY, s1.start_date, s2.start_date) BETWEEN 151 AND 180 THEN '151-180'
			ELSE 'other' END AS 'days_group'
	FROM subscriptions s1 JOIN subscriptions s2
	ON s1.customer_id = s2.customer_id
	WHERE s1.plan_id = 0 AND s2.plan_id = 3) A
GROUP BY days_group
ORDER BY 2 DESC

--------------------------- Q11 ---------------------------

SELECT COUNT(*) AS 'downgraded_pro_to_basic'
FROM (SELECT s.*, LAG(plan_id, 1) OVER(PARTITION BY customer_id ORDER BY start_date) AS 'previous_plan'
	FROM subscriptions s) plan_moves
WHERE plan_id = 1 AND previous_plan = 2 AND start_date BETWEEN '2020-01-01' AND '2020-12-31'



--------------------------- C. Challenge Payment Question ---------------------------

SELECT customer_id, plan_name, MIN(start_date) AS start_plan
FROM subscriptions s JOIN plans p ON s.plan_id = p.plan_id
WHERE start_date < '2021-01-01' AND plan_name <> 'trial'
GROUP BY customer_id, plan_name
ORDER BY 1, 3
